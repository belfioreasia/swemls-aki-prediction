apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: aki-detection-state
  namespace: konigsallee
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: managed-csi
  resources:
    requests:
      storage: 1G
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aki-detection
  namespace: konigsallee
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: aki-detection
  template:
    metadata:
      labels:
        app: aki-detection
    spec:
      containers:
      - name: aki-detection
        image: imperialswemlsspring2025.azurecr.io/coursework4-konigsallee
        command: ["/app/venv/bin/python3", "/app/system/main.py"]
        args:
        # Replace this with however you tell your solution where to find the
        # initial history file. /data is mounted below.
        - "--history=/data/history.csv"
        - "--mllp_address=${MLLP_ADDRESS}"
        - "--pager_address=${PAGER_ADDRESS}"
        env:
        - name: MLLP_ADDRESS
          value: konigsallee-simulator.coursework4:8440 
        - name: PAGER_ADDRESS
          value: konigsallee-simulator.coursework4:8441
        - name: PYTHONUNBUFFERED
          value: "1"
        ports:
        - name: http
          containerPort: 8000
        volumeMounts:
          - mountPath: "/data"
            name: hospital-history
            readOnly: true
          - mountPath: "/state"
            name: aki-detection-state
        resources:
          requests:
            memory: 1G
            cpu: 1
      initContainers:
      - name: copy-hospital-history
        image: imperialswemlsspring2025.azurecr.io/coursework4-history 
        volumeMounts:
          - mountPath: "/data"
            name: hospital-history
        resources:
          requests:
            memory: 1G
            cpu: 1
      volumes:
      - name: hospital-history
        emptyDir:
          sizeLimit: 50Mi
      - name: aki-detection-state
        persistentVolumeClaim:
          claimName: aki-detection-state